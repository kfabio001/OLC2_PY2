Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> etiquetas
Rule 2     init -> empty
Rule 3     etiquetas -> etiquetas etiqueta
Rule 4     etiquetas -> etiqueta
Rule 5     empty -> <empty>
Rule 6     etiqueta -> ID DOSP instrucciones
Rule 7     etiqueta -> ID DOSP empty
Rule 8     instrucciones -> instrucciones instruccion
Rule 9     instrucciones -> instruccion
Rule 10    instruccion -> imprimir_instr
Rule 11    instruccion -> asignacion
Rule 12    instruccion -> unset
Rule 13    instruccion -> exit
Rule 14    instruccion -> puntero
Rule 15    instruccion -> go_to
Rule 16    instruccion -> if_instruccion
Rule 17    instruccion -> conversion
Rule 18    instruccion -> acceso_lista_asigna
Rule 19    instruccion -> read
Rule 20    instruccion -> error
Rule 21    imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA
Rule 22    imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA
Rule 23    imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA
Rule 24    imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA
Rule 25    expresion -> primitiva
Rule 26    expresion -> expresion_numerica
Rule 27    expresion -> expresion_relacional
Rule 28    expresion -> expresion_unaria
Rule 29    expresion -> expresion_logica
Rule 30    expresion -> expresion_bit_bit
Rule 31    expresion -> absoluto
Rule 32    go_to -> GOTO ID PTCOMA
Rule 33    if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA
Rule 34    exit -> EXIT PTCOMA
Rule 35    unset -> UNSET PARIZQ TEMP PARDER PTCOMA
Rule 36    unset -> UNSET PARIZQ PARAM PARDER PTCOMA
Rule 37    unset -> UNSET PARIZQ RET PARDER PTCOMA
Rule 38    unset -> UNSET PARIZQ PILA PARDER PTCOMA
Rule 39    read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA
Rule 40    asignacion -> tipo_var IGUAL expresion PTCOMA
Rule 41    asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA
Rule 42    puntero -> tipo_var IGUAL PAND tipo_var PTCOMA
Rule 43    conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA
Rule 44    tipo_dato -> INT
Rule 45    tipo_dato -> FLOAT
Rule 46    tipo_dato -> CHAR
Rule 47    tipo_var -> TEMP
Rule 48    tipo_var -> PARAM
Rule 49    tipo_var -> RET
Rule 50    tipo_var -> PILA
Rule 51    tipo_var -> RA
Rule 52    tipo_var -> PUNTERO
Rule 53    expresion_unaria -> MENOS primitiva
Rule 54    expresion_logica -> primitiva AND primitiva
Rule 55    expresion_logica -> primitiva OR primitiva
Rule 56    expresion_logica -> primitiva XOR primitiva
Rule 57    expresion_logica -> NOT primitiva
Rule 58    expresion_bit_bit -> primitiva PAND primitiva
Rule 59    expresion_bit_bit -> primitiva BOR primitiva
Rule 60    expresion_bit_bit -> primitiva XORR primitiva
Rule 61    expresion_bit_bit -> primitiva SHIFTI primitiva
Rule 62    expresion_bit_bit -> primitiva SHIFTD primitiva
Rule 63    expresion_bit_bit -> NOTR primitiva
Rule 64    expresion_relacional -> primitiva MENQUE primitiva
Rule 65    expresion_relacional -> primitiva MAYQUE primitiva
Rule 66    expresion_relacional -> primitiva MEIQUE primitiva
Rule 67    expresion_relacional -> primitiva MAIQUE primitiva
Rule 68    expresion_relacional -> primitiva IGUALQUE primitiva
Rule 69    expresion_relacional -> primitiva NIGUALQUE primitiva
Rule 70    expresion_numerica -> primitiva MAS primitiva
Rule 71    expresion_numerica -> primitiva MENOS primitiva
Rule 72    expresion_numerica -> primitiva POR primitiva
Rule 73    expresion_numerica -> primitiva DIVIDIDO primitiva
Rule 74    expresion_numerica -> primitiva RESTO primitiva
Rule 75    absoluto -> ABS PARIZQ primitiva PARDER
Rule 76    primitiva -> ENTERO
Rule 77    primitiva -> DECIMAL
Rule 78    primitiva -> CADENA
Rule 79    primitiva -> CADENA2
Rule 80    primitiva -> TEMP
Rule 81    primitiva -> PARAM
Rule 82    primitiva -> RET
Rule 83    primitiva -> PILA
Rule 84    primitiva -> RA
Rule 85    primitiva -> PUNTERO
Rule 86    primitiva -> acceso_lista
Rule 87    acceso_lista -> tipo_var accesos
Rule 88    acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA
Rule 89    acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA
Rule 90    accesos -> accesos acceso
Rule 91    accesos -> acceso
Rule 92    acceso -> CORIZQ primitiva CORDER

Terminals, with rules where they appear

ABS                  : 75
AND                  : 54
ARRAY                : 41 89
BOR                  : 59
CADENA               : 23 78
CADENA2              : 24 79
CHAR                 : 46
CORDER               : 92
CORIZQ               : 92
DECIMAL              : 77
DIVIDIDO             : 73
DOSP                 : 6 7
ENTERO               : 76
EXIT                 : 34
FLOAT                : 45
GOTO                 : 32 33
ID                   : 6 7 32 33
IF                   : 33
IGUAL                : 39 40 41 42 43 88 89
IGUALQUE             : 68
IMPRIMIR             : 21 22 23 24
INT                  : 44
MAIQUE               : 67
MAS                  : 70
MAYQUE               : 65
MEIQUE               : 66
MENOS                : 53 71
MENQUE               : 64
NIGUALQUE            : 69
NOT                  : 57
NOTR                 : 63
OR                   : 55
PAND                 : 42 58
PARAM                : 36 48 81
PARDER               : 21 22 23 24 33 35 36 37 38 39 41 43 75 89
PARIZQ               : 21 22 23 24 33 35 36 37 38 39 41 43 75 89
PILA                 : 38 50 83
POR                  : 72
PTCOMA               : 21 22 23 24 32 33 34 35 36 37 38 39 40 41 42 43 88 89
PUNTERO              : 52 85
RA                   : 51 84
READ                 : 39
RESTO                : 74
RET                  : 37 49 82
SHIFTD               : 62
SHIFTI               : 61
TEMP                 : 35 47 80
UNSET                : 35 36 37 38
XOR                  : 56
XORR                 : 60
error                : 20

Nonterminals, with rules where they appear

absoluto             : 31
acceso               : 90 91
acceso_lista         : 22 86
acceso_lista_asigna  : 18
accesos              : 87 88 89 90
asignacion           : 11
conversion           : 17
empty                : 2 7
etiqueta             : 3 4
etiquetas            : 1 3
exit                 : 13
expresion            : 33 40 88
expresion_bit_bit    : 30
expresion_logica     : 29
expresion_numerica   : 26
expresion_relacional : 27
expresion_unaria     : 28
go_to                : 15
if_instruccion       : 16
imprimir_instr       : 10
init                 : 0
instruccion          : 8 9
instrucciones        : 6 8
primitiva            : 25 43 53 54 54 55 55 56 56 57 58 58 59 59 60 60 61 61 62 62 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 92
puntero              : 14
read                 : 19
tipo_dato            : 43
tipo_var             : 21 39 40 41 42 42 43 87 88 89
unset                : 12

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . etiquetas
    (2) init -> . empty
    (3) etiquetas -> . etiquetas etiqueta
    (4) etiquetas -> . etiqueta
    (5) empty -> .
    (6) etiqueta -> . ID DOSP instrucciones
    (7) etiqueta -> . ID DOSP empty

    $end            reduce using rule 5 (empty -> .)
    ID              shift and go to state 5

    init                           shift and go to state 1
    etiquetas                      shift and go to state 2
    empty                          shift and go to state 3
    etiqueta                       shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> etiquetas .
    (3) etiquetas -> etiquetas . etiqueta
    (6) etiqueta -> . ID DOSP instrucciones
    (7) etiqueta -> . ID DOSP empty

    $end            reduce using rule 1 (init -> etiquetas .)
    ID              shift and go to state 5

    etiqueta                       shift and go to state 6

state 3

    (2) init -> empty .

    $end            reduce using rule 2 (init -> empty .)


state 4

    (4) etiquetas -> etiqueta .

    ID              reduce using rule 4 (etiquetas -> etiqueta .)
    $end            reduce using rule 4 (etiquetas -> etiqueta .)


state 5

    (6) etiqueta -> ID . DOSP instrucciones
    (7) etiqueta -> ID . DOSP empty

    DOSP            shift and go to state 7


state 6

    (3) etiquetas -> etiquetas etiqueta .

    ID              reduce using rule 3 (etiquetas -> etiquetas etiqueta .)
    $end            reduce using rule 3 (etiquetas -> etiquetas etiqueta .)


state 7

    (6) etiqueta -> ID DOSP . instrucciones
    (7) etiqueta -> ID DOSP . empty
    (8) instrucciones -> . instrucciones instruccion
    (9) instrucciones -> . instruccion
    (5) empty -> .
    (10) instruccion -> . imprimir_instr
    (11) instruccion -> . asignacion
    (12) instruccion -> . unset
    (13) instruccion -> . exit
    (14) instruccion -> . puntero
    (15) instruccion -> . go_to
    (16) instruccion -> . if_instruccion
    (17) instruccion -> . conversion
    (18) instruccion -> . acceso_lista_asigna
    (19) instruccion -> . read
    (20) instruccion -> . error
    (21) imprimir_instr -> . IMPRIMIR PARIZQ tipo_var PARDER PTCOMA
    (22) imprimir_instr -> . IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA
    (23) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (24) imprimir_instr -> . IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA
    (40) asignacion -> . tipo_var IGUAL expresion PTCOMA
    (41) asignacion -> . tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA
    (35) unset -> . UNSET PARIZQ TEMP PARDER PTCOMA
    (36) unset -> . UNSET PARIZQ PARAM PARDER PTCOMA
    (37) unset -> . UNSET PARIZQ RET PARDER PTCOMA
    (38) unset -> . UNSET PARIZQ PILA PARDER PTCOMA
    (34) exit -> . EXIT PTCOMA
    (42) puntero -> . tipo_var IGUAL PAND tipo_var PTCOMA
    (32) go_to -> . GOTO ID PTCOMA
    (33) if_instruccion -> . IF PARIZQ expresion PARDER GOTO ID PTCOMA
    (43) conversion -> . tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA
    (88) acceso_lista_asigna -> . tipo_var accesos IGUAL expresion PTCOMA
    (89) acceso_lista_asigna -> . tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA
    (39) read -> . tipo_var IGUAL READ PARIZQ PARDER PTCOMA
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ID              reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    error           shift and go to state 21
    IMPRIMIR        shift and go to state 22
    UNSET           shift and go to state 24
    EXIT            shift and go to state 29
    GOTO            shift and go to state 30
    IF              shift and go to state 31
    TEMP            shift and go to state 25
    PARAM           shift and go to state 26
    RET             shift and go to state 27
    PILA            shift and go to state 28
    RA              shift and go to state 32
    PUNTERO         shift and go to state 33

    instrucciones                  shift and go to state 8
    empty                          shift and go to state 9
    instruccion                    shift and go to state 10
    imprimir_instr                 shift and go to state 11
    asignacion                     shift and go to state 12
    unset                          shift and go to state 13
    exit                           shift and go to state 14
    puntero                        shift and go to state 15
    go_to                          shift and go to state 16
    if_instruccion                 shift and go to state 17
    conversion                     shift and go to state 18
    acceso_lista_asigna            shift and go to state 19
    read                           shift and go to state 20
    tipo_var                       shift and go to state 23

state 8

    (6) etiqueta -> ID DOSP instrucciones .
    (8) instrucciones -> instrucciones . instruccion
    (10) instruccion -> . imprimir_instr
    (11) instruccion -> . asignacion
    (12) instruccion -> . unset
    (13) instruccion -> . exit
    (14) instruccion -> . puntero
    (15) instruccion -> . go_to
    (16) instruccion -> . if_instruccion
    (17) instruccion -> . conversion
    (18) instruccion -> . acceso_lista_asigna
    (19) instruccion -> . read
    (20) instruccion -> . error
    (21) imprimir_instr -> . IMPRIMIR PARIZQ tipo_var PARDER PTCOMA
    (22) imprimir_instr -> . IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA
    (23) imprimir_instr -> . IMPRIMIR PARIZQ CADENA PARDER PTCOMA
    (24) imprimir_instr -> . IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA
    (40) asignacion -> . tipo_var IGUAL expresion PTCOMA
    (41) asignacion -> . tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA
    (35) unset -> . UNSET PARIZQ TEMP PARDER PTCOMA
    (36) unset -> . UNSET PARIZQ PARAM PARDER PTCOMA
    (37) unset -> . UNSET PARIZQ RET PARDER PTCOMA
    (38) unset -> . UNSET PARIZQ PILA PARDER PTCOMA
    (34) exit -> . EXIT PTCOMA
    (42) puntero -> . tipo_var IGUAL PAND tipo_var PTCOMA
    (32) go_to -> . GOTO ID PTCOMA
    (33) if_instruccion -> . IF PARIZQ expresion PARDER GOTO ID PTCOMA
    (43) conversion -> . tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA
    (88) acceso_lista_asigna -> . tipo_var accesos IGUAL expresion PTCOMA
    (89) acceso_lista_asigna -> . tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA
    (39) read -> . tipo_var IGUAL READ PARIZQ PARDER PTCOMA
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ID              reduce using rule 6 (etiqueta -> ID DOSP instrucciones .)
    $end            reduce using rule 6 (etiqueta -> ID DOSP instrucciones .)
    error           shift and go to state 21
    IMPRIMIR        shift and go to state 22
    UNSET           shift and go to state 24
    EXIT            shift and go to state 29
    GOTO            shift and go to state 30
    IF              shift and go to state 31
    TEMP            shift and go to state 25
    PARAM           shift and go to state 26
    RET             shift and go to state 27
    PILA            shift and go to state 28
    RA              shift and go to state 32
    PUNTERO         shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir_instr                 shift and go to state 11
    asignacion                     shift and go to state 12
    unset                          shift and go to state 13
    exit                           shift and go to state 14
    puntero                        shift and go to state 15
    go_to                          shift and go to state 16
    if_instruccion                 shift and go to state 17
    conversion                     shift and go to state 18
    acceso_lista_asigna            shift and go to state 19
    read                           shift and go to state 20
    tipo_var                       shift and go to state 23

state 9

    (7) etiqueta -> ID DOSP empty .

    ID              reduce using rule 7 (etiqueta -> ID DOSP empty .)
    $end            reduce using rule 7 (etiqueta -> ID DOSP empty .)


state 10

    (9) instrucciones -> instruccion .

    error           reduce using rule 9 (instrucciones -> instruccion .)
    IMPRIMIR        reduce using rule 9 (instrucciones -> instruccion .)
    UNSET           reduce using rule 9 (instrucciones -> instruccion .)
    EXIT            reduce using rule 9 (instrucciones -> instruccion .)
    GOTO            reduce using rule 9 (instrucciones -> instruccion .)
    IF              reduce using rule 9 (instrucciones -> instruccion .)
    TEMP            reduce using rule 9 (instrucciones -> instruccion .)
    PARAM           reduce using rule 9 (instrucciones -> instruccion .)
    RET             reduce using rule 9 (instrucciones -> instruccion .)
    PILA            reduce using rule 9 (instrucciones -> instruccion .)
    RA              reduce using rule 9 (instrucciones -> instruccion .)
    PUNTERO         reduce using rule 9 (instrucciones -> instruccion .)
    ID              reduce using rule 9 (instrucciones -> instruccion .)
    $end            reduce using rule 9 (instrucciones -> instruccion .)


state 11

    (10) instruccion -> imprimir_instr .

    error           reduce using rule 10 (instruccion -> imprimir_instr .)
    IMPRIMIR        reduce using rule 10 (instruccion -> imprimir_instr .)
    UNSET           reduce using rule 10 (instruccion -> imprimir_instr .)
    EXIT            reduce using rule 10 (instruccion -> imprimir_instr .)
    GOTO            reduce using rule 10 (instruccion -> imprimir_instr .)
    IF              reduce using rule 10 (instruccion -> imprimir_instr .)
    TEMP            reduce using rule 10 (instruccion -> imprimir_instr .)
    PARAM           reduce using rule 10 (instruccion -> imprimir_instr .)
    RET             reduce using rule 10 (instruccion -> imprimir_instr .)
    PILA            reduce using rule 10 (instruccion -> imprimir_instr .)
    RA              reduce using rule 10 (instruccion -> imprimir_instr .)
    PUNTERO         reduce using rule 10 (instruccion -> imprimir_instr .)
    ID              reduce using rule 10 (instruccion -> imprimir_instr .)
    $end            reduce using rule 10 (instruccion -> imprimir_instr .)


state 12

    (11) instruccion -> asignacion .

    error           reduce using rule 11 (instruccion -> asignacion .)
    IMPRIMIR        reduce using rule 11 (instruccion -> asignacion .)
    UNSET           reduce using rule 11 (instruccion -> asignacion .)
    EXIT            reduce using rule 11 (instruccion -> asignacion .)
    GOTO            reduce using rule 11 (instruccion -> asignacion .)
    IF              reduce using rule 11 (instruccion -> asignacion .)
    TEMP            reduce using rule 11 (instruccion -> asignacion .)
    PARAM           reduce using rule 11 (instruccion -> asignacion .)
    RET             reduce using rule 11 (instruccion -> asignacion .)
    PILA            reduce using rule 11 (instruccion -> asignacion .)
    RA              reduce using rule 11 (instruccion -> asignacion .)
    PUNTERO         reduce using rule 11 (instruccion -> asignacion .)
    ID              reduce using rule 11 (instruccion -> asignacion .)
    $end            reduce using rule 11 (instruccion -> asignacion .)


state 13

    (12) instruccion -> unset .

    error           reduce using rule 12 (instruccion -> unset .)
    IMPRIMIR        reduce using rule 12 (instruccion -> unset .)
    UNSET           reduce using rule 12 (instruccion -> unset .)
    EXIT            reduce using rule 12 (instruccion -> unset .)
    GOTO            reduce using rule 12 (instruccion -> unset .)
    IF              reduce using rule 12 (instruccion -> unset .)
    TEMP            reduce using rule 12 (instruccion -> unset .)
    PARAM           reduce using rule 12 (instruccion -> unset .)
    RET             reduce using rule 12 (instruccion -> unset .)
    PILA            reduce using rule 12 (instruccion -> unset .)
    RA              reduce using rule 12 (instruccion -> unset .)
    PUNTERO         reduce using rule 12 (instruccion -> unset .)
    ID              reduce using rule 12 (instruccion -> unset .)
    $end            reduce using rule 12 (instruccion -> unset .)


state 14

    (13) instruccion -> exit .

    error           reduce using rule 13 (instruccion -> exit .)
    IMPRIMIR        reduce using rule 13 (instruccion -> exit .)
    UNSET           reduce using rule 13 (instruccion -> exit .)
    EXIT            reduce using rule 13 (instruccion -> exit .)
    GOTO            reduce using rule 13 (instruccion -> exit .)
    IF              reduce using rule 13 (instruccion -> exit .)
    TEMP            reduce using rule 13 (instruccion -> exit .)
    PARAM           reduce using rule 13 (instruccion -> exit .)
    RET             reduce using rule 13 (instruccion -> exit .)
    PILA            reduce using rule 13 (instruccion -> exit .)
    RA              reduce using rule 13 (instruccion -> exit .)
    PUNTERO         reduce using rule 13 (instruccion -> exit .)
    ID              reduce using rule 13 (instruccion -> exit .)
    $end            reduce using rule 13 (instruccion -> exit .)


state 15

    (14) instruccion -> puntero .

    error           reduce using rule 14 (instruccion -> puntero .)
    IMPRIMIR        reduce using rule 14 (instruccion -> puntero .)
    UNSET           reduce using rule 14 (instruccion -> puntero .)
    EXIT            reduce using rule 14 (instruccion -> puntero .)
    GOTO            reduce using rule 14 (instruccion -> puntero .)
    IF              reduce using rule 14 (instruccion -> puntero .)
    TEMP            reduce using rule 14 (instruccion -> puntero .)
    PARAM           reduce using rule 14 (instruccion -> puntero .)
    RET             reduce using rule 14 (instruccion -> puntero .)
    PILA            reduce using rule 14 (instruccion -> puntero .)
    RA              reduce using rule 14 (instruccion -> puntero .)
    PUNTERO         reduce using rule 14 (instruccion -> puntero .)
    ID              reduce using rule 14 (instruccion -> puntero .)
    $end            reduce using rule 14 (instruccion -> puntero .)


state 16

    (15) instruccion -> go_to .

    error           reduce using rule 15 (instruccion -> go_to .)
    IMPRIMIR        reduce using rule 15 (instruccion -> go_to .)
    UNSET           reduce using rule 15 (instruccion -> go_to .)
    EXIT            reduce using rule 15 (instruccion -> go_to .)
    GOTO            reduce using rule 15 (instruccion -> go_to .)
    IF              reduce using rule 15 (instruccion -> go_to .)
    TEMP            reduce using rule 15 (instruccion -> go_to .)
    PARAM           reduce using rule 15 (instruccion -> go_to .)
    RET             reduce using rule 15 (instruccion -> go_to .)
    PILA            reduce using rule 15 (instruccion -> go_to .)
    RA              reduce using rule 15 (instruccion -> go_to .)
    PUNTERO         reduce using rule 15 (instruccion -> go_to .)
    ID              reduce using rule 15 (instruccion -> go_to .)
    $end            reduce using rule 15 (instruccion -> go_to .)


state 17

    (16) instruccion -> if_instruccion .

    error           reduce using rule 16 (instruccion -> if_instruccion .)
    IMPRIMIR        reduce using rule 16 (instruccion -> if_instruccion .)
    UNSET           reduce using rule 16 (instruccion -> if_instruccion .)
    EXIT            reduce using rule 16 (instruccion -> if_instruccion .)
    GOTO            reduce using rule 16 (instruccion -> if_instruccion .)
    IF              reduce using rule 16 (instruccion -> if_instruccion .)
    TEMP            reduce using rule 16 (instruccion -> if_instruccion .)
    PARAM           reduce using rule 16 (instruccion -> if_instruccion .)
    RET             reduce using rule 16 (instruccion -> if_instruccion .)
    PILA            reduce using rule 16 (instruccion -> if_instruccion .)
    RA              reduce using rule 16 (instruccion -> if_instruccion .)
    PUNTERO         reduce using rule 16 (instruccion -> if_instruccion .)
    ID              reduce using rule 16 (instruccion -> if_instruccion .)
    $end            reduce using rule 16 (instruccion -> if_instruccion .)


state 18

    (17) instruccion -> conversion .

    error           reduce using rule 17 (instruccion -> conversion .)
    IMPRIMIR        reduce using rule 17 (instruccion -> conversion .)
    UNSET           reduce using rule 17 (instruccion -> conversion .)
    EXIT            reduce using rule 17 (instruccion -> conversion .)
    GOTO            reduce using rule 17 (instruccion -> conversion .)
    IF              reduce using rule 17 (instruccion -> conversion .)
    TEMP            reduce using rule 17 (instruccion -> conversion .)
    PARAM           reduce using rule 17 (instruccion -> conversion .)
    RET             reduce using rule 17 (instruccion -> conversion .)
    PILA            reduce using rule 17 (instruccion -> conversion .)
    RA              reduce using rule 17 (instruccion -> conversion .)
    PUNTERO         reduce using rule 17 (instruccion -> conversion .)
    ID              reduce using rule 17 (instruccion -> conversion .)
    $end            reduce using rule 17 (instruccion -> conversion .)


state 19

    (18) instruccion -> acceso_lista_asigna .

    error           reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    IMPRIMIR        reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    UNSET           reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    EXIT            reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    GOTO            reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    IF              reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    TEMP            reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    PARAM           reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    RET             reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    PILA            reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    RA              reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    PUNTERO         reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    ID              reduce using rule 18 (instruccion -> acceso_lista_asigna .)
    $end            reduce using rule 18 (instruccion -> acceso_lista_asigna .)


state 20

    (19) instruccion -> read .

    error           reduce using rule 19 (instruccion -> read .)
    IMPRIMIR        reduce using rule 19 (instruccion -> read .)
    UNSET           reduce using rule 19 (instruccion -> read .)
    EXIT            reduce using rule 19 (instruccion -> read .)
    GOTO            reduce using rule 19 (instruccion -> read .)
    IF              reduce using rule 19 (instruccion -> read .)
    TEMP            reduce using rule 19 (instruccion -> read .)
    PARAM           reduce using rule 19 (instruccion -> read .)
    RET             reduce using rule 19 (instruccion -> read .)
    PILA            reduce using rule 19 (instruccion -> read .)
    RA              reduce using rule 19 (instruccion -> read .)
    PUNTERO         reduce using rule 19 (instruccion -> read .)
    ID              reduce using rule 19 (instruccion -> read .)
    $end            reduce using rule 19 (instruccion -> read .)


state 21

    (20) instruccion -> error .

    error           reduce using rule 20 (instruccion -> error .)
    IMPRIMIR        reduce using rule 20 (instruccion -> error .)
    UNSET           reduce using rule 20 (instruccion -> error .)
    EXIT            reduce using rule 20 (instruccion -> error .)
    GOTO            reduce using rule 20 (instruccion -> error .)
    IF              reduce using rule 20 (instruccion -> error .)
    TEMP            reduce using rule 20 (instruccion -> error .)
    PARAM           reduce using rule 20 (instruccion -> error .)
    RET             reduce using rule 20 (instruccion -> error .)
    PILA            reduce using rule 20 (instruccion -> error .)
    RA              reduce using rule 20 (instruccion -> error .)
    PUNTERO         reduce using rule 20 (instruccion -> error .)
    ID              reduce using rule 20 (instruccion -> error .)
    $end            reduce using rule 20 (instruccion -> error .)


state 22

    (21) imprimir_instr -> IMPRIMIR . PARIZQ tipo_var PARDER PTCOMA
    (22) imprimir_instr -> IMPRIMIR . PARIZQ acceso_lista PARDER PTCOMA
    (23) imprimir_instr -> IMPRIMIR . PARIZQ CADENA PARDER PTCOMA
    (24) imprimir_instr -> IMPRIMIR . PARIZQ CADENA2 PARDER PTCOMA

    PARIZQ          shift and go to state 35


state 23

    (40) asignacion -> tipo_var . IGUAL expresion PTCOMA
    (41) asignacion -> tipo_var . IGUAL ARRAY PARIZQ PARDER PTCOMA
    (42) puntero -> tipo_var . IGUAL PAND tipo_var PTCOMA
    (43) conversion -> tipo_var . IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA
    (88) acceso_lista_asigna -> tipo_var . accesos IGUAL expresion PTCOMA
    (89) acceso_lista_asigna -> tipo_var . accesos IGUAL ARRAY PARIZQ PARDER PTCOMA
    (39) read -> tipo_var . IGUAL READ PARIZQ PARDER PTCOMA
    (90) accesos -> . accesos acceso
    (91) accesos -> . acceso
    (92) acceso -> . CORIZQ primitiva CORDER

    IGUAL           shift and go to state 36
    CORIZQ          shift and go to state 39

    accesos                        shift and go to state 37
    acceso                         shift and go to state 38

state 24

    (35) unset -> UNSET . PARIZQ TEMP PARDER PTCOMA
    (36) unset -> UNSET . PARIZQ PARAM PARDER PTCOMA
    (37) unset -> UNSET . PARIZQ RET PARDER PTCOMA
    (38) unset -> UNSET . PARIZQ PILA PARDER PTCOMA

    PARIZQ          shift and go to state 40


state 25

    (47) tipo_var -> TEMP .

    IGUAL           reduce using rule 47 (tipo_var -> TEMP .)
    CORIZQ          reduce using rule 47 (tipo_var -> TEMP .)
    PARDER          reduce using rule 47 (tipo_var -> TEMP .)
    PTCOMA          reduce using rule 47 (tipo_var -> TEMP .)


state 26

    (48) tipo_var -> PARAM .

    IGUAL           reduce using rule 48 (tipo_var -> PARAM .)
    CORIZQ          reduce using rule 48 (tipo_var -> PARAM .)
    PARDER          reduce using rule 48 (tipo_var -> PARAM .)
    PTCOMA          reduce using rule 48 (tipo_var -> PARAM .)


state 27

    (49) tipo_var -> RET .

    IGUAL           reduce using rule 49 (tipo_var -> RET .)
    CORIZQ          reduce using rule 49 (tipo_var -> RET .)
    PARDER          reduce using rule 49 (tipo_var -> RET .)
    PTCOMA          reduce using rule 49 (tipo_var -> RET .)


state 28

    (50) tipo_var -> PILA .

    IGUAL           reduce using rule 50 (tipo_var -> PILA .)
    CORIZQ          reduce using rule 50 (tipo_var -> PILA .)
    PARDER          reduce using rule 50 (tipo_var -> PILA .)
    PTCOMA          reduce using rule 50 (tipo_var -> PILA .)


state 29

    (34) exit -> EXIT . PTCOMA

    PTCOMA          shift and go to state 41


state 30

    (32) go_to -> GOTO . ID PTCOMA

    ID              shift and go to state 42


state 31

    (33) if_instruccion -> IF . PARIZQ expresion PARDER GOTO ID PTCOMA

    PARIZQ          shift and go to state 43


state 32

    (51) tipo_var -> RA .

    IGUAL           reduce using rule 51 (tipo_var -> RA .)
    CORIZQ          reduce using rule 51 (tipo_var -> RA .)
    PARDER          reduce using rule 51 (tipo_var -> RA .)
    PTCOMA          reduce using rule 51 (tipo_var -> RA .)


state 33

    (52) tipo_var -> PUNTERO .

    IGUAL           reduce using rule 52 (tipo_var -> PUNTERO .)
    CORIZQ          reduce using rule 52 (tipo_var -> PUNTERO .)
    PARDER          reduce using rule 52 (tipo_var -> PUNTERO .)
    PTCOMA          reduce using rule 52 (tipo_var -> PUNTERO .)


state 34

    (8) instrucciones -> instrucciones instruccion .

    error           reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    IMPRIMIR        reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    UNSET           reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    EXIT            reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    GOTO            reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    TEMP            reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    PARAM           reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    RET             reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    PILA            reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    RA              reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    PUNTERO         reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 8 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 8 (instrucciones -> instrucciones instruccion .)


state 35

    (21) imprimir_instr -> IMPRIMIR PARIZQ . tipo_var PARDER PTCOMA
    (22) imprimir_instr -> IMPRIMIR PARIZQ . acceso_lista PARDER PTCOMA
    (23) imprimir_instr -> IMPRIMIR PARIZQ . CADENA PARDER PTCOMA
    (24) imprimir_instr -> IMPRIMIR PARIZQ . CADENA2 PARDER PTCOMA
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO
    (87) acceso_lista -> . tipo_var accesos

    CADENA          shift and go to state 46
    CADENA2         shift and go to state 47
    TEMP            shift and go to state 25
    PARAM           shift and go to state 26
    RET             shift and go to state 27
    PILA            shift and go to state 28
    RA              shift and go to state 32
    PUNTERO         shift and go to state 33

    tipo_var                       shift and go to state 44
    acceso_lista                   shift and go to state 45

state 36

    (40) asignacion -> tipo_var IGUAL . expresion PTCOMA
    (41) asignacion -> tipo_var IGUAL . ARRAY PARIZQ PARDER PTCOMA
    (42) puntero -> tipo_var IGUAL . PAND tipo_var PTCOMA
    (43) conversion -> tipo_var IGUAL . PARIZQ tipo_dato PARDER primitiva PTCOMA
    (39) read -> tipo_var IGUAL . READ PARIZQ PARDER PTCOMA
    (25) expresion -> . primitiva
    (26) expresion -> . expresion_numerica
    (27) expresion -> . expresion_relacional
    (28) expresion -> . expresion_unaria
    (29) expresion -> . expresion_logica
    (30) expresion -> . expresion_bit_bit
    (31) expresion -> . absoluto
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (70) expresion_numerica -> . primitiva MAS primitiva
    (71) expresion_numerica -> . primitiva MENOS primitiva
    (72) expresion_numerica -> . primitiva POR primitiva
    (73) expresion_numerica -> . primitiva DIVIDIDO primitiva
    (74) expresion_numerica -> . primitiva RESTO primitiva
    (64) expresion_relacional -> . primitiva MENQUE primitiva
    (65) expresion_relacional -> . primitiva MAYQUE primitiva
    (66) expresion_relacional -> . primitiva MEIQUE primitiva
    (67) expresion_relacional -> . primitiva MAIQUE primitiva
    (68) expresion_relacional -> . primitiva IGUALQUE primitiva
    (69) expresion_relacional -> . primitiva NIGUALQUE primitiva
    (53) expresion_unaria -> . MENOS primitiva
    (54) expresion_logica -> . primitiva AND primitiva
    (55) expresion_logica -> . primitiva OR primitiva
    (56) expresion_logica -> . primitiva XOR primitiva
    (57) expresion_logica -> . NOT primitiva
    (58) expresion_bit_bit -> . primitiva PAND primitiva
    (59) expresion_bit_bit -> . primitiva BOR primitiva
    (60) expresion_bit_bit -> . primitiva XORR primitiva
    (61) expresion_bit_bit -> . primitiva SHIFTI primitiva
    (62) expresion_bit_bit -> . primitiva SHIFTD primitiva
    (63) expresion_bit_bit -> . NOTR primitiva
    (75) absoluto -> . ABS PARIZQ primitiva PARDER
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ARRAY           shift and go to state 50
    PAND            shift and go to state 52
    PARIZQ          shift and go to state 51
    READ            shift and go to state 54
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70
    MENOS           shift and go to state 72
    NOT             shift and go to state 73
    NOTR            shift and go to state 74
    ABS             shift and go to state 75

    tipo_var                       shift and go to state 48
    expresion                      shift and go to state 49
    primitiva                      shift and go to state 53
    expresion_numerica             shift and go to state 55
    expresion_relacional           shift and go to state 56
    expresion_unaria               shift and go to state 57
    expresion_logica               shift and go to state 58
    expresion_bit_bit              shift and go to state 59
    absoluto                       shift and go to state 60
    acceso_lista                   shift and go to state 71

state 37

    (88) acceso_lista_asigna -> tipo_var accesos . IGUAL expresion PTCOMA
    (89) acceso_lista_asigna -> tipo_var accesos . IGUAL ARRAY PARIZQ PARDER PTCOMA
    (90) accesos -> accesos . acceso
    (92) acceso -> . CORIZQ primitiva CORDER

    IGUAL           shift and go to state 76
    CORIZQ          shift and go to state 39

    acceso                         shift and go to state 77

state 38

    (91) accesos -> acceso .

    IGUAL           reduce using rule 91 (accesos -> acceso .)
    CORIZQ          reduce using rule 91 (accesos -> acceso .)
    PARDER          reduce using rule 91 (accesos -> acceso .)
    MAS             reduce using rule 91 (accesos -> acceso .)
    MENOS           reduce using rule 91 (accesos -> acceso .)
    POR             reduce using rule 91 (accesos -> acceso .)
    DIVIDIDO        reduce using rule 91 (accesos -> acceso .)
    RESTO           reduce using rule 91 (accesos -> acceso .)
    MENQUE          reduce using rule 91 (accesos -> acceso .)
    MAYQUE          reduce using rule 91 (accesos -> acceso .)
    MEIQUE          reduce using rule 91 (accesos -> acceso .)
    MAIQUE          reduce using rule 91 (accesos -> acceso .)
    IGUALQUE        reduce using rule 91 (accesos -> acceso .)
    NIGUALQUE       reduce using rule 91 (accesos -> acceso .)
    AND             reduce using rule 91 (accesos -> acceso .)
    OR              reduce using rule 91 (accesos -> acceso .)
    XOR             reduce using rule 91 (accesos -> acceso .)
    PAND            reduce using rule 91 (accesos -> acceso .)
    BOR             reduce using rule 91 (accesos -> acceso .)
    XORR            reduce using rule 91 (accesos -> acceso .)
    SHIFTI          reduce using rule 91 (accesos -> acceso .)
    SHIFTD          reduce using rule 91 (accesos -> acceso .)
    PTCOMA          reduce using rule 91 (accesos -> acceso .)
    CORDER          reduce using rule 91 (accesos -> acceso .)


state 39

    (92) acceso -> CORIZQ . primitiva CORDER
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 78
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 40

    (35) unset -> UNSET PARIZQ . TEMP PARDER PTCOMA
    (36) unset -> UNSET PARIZQ . PARAM PARDER PTCOMA
    (37) unset -> UNSET PARIZQ . RET PARDER PTCOMA
    (38) unset -> UNSET PARIZQ . PILA PARDER PTCOMA

    TEMP            shift and go to state 79
    PARAM           shift and go to state 80
    RET             shift and go to state 81
    PILA            shift and go to state 82


state 41

    (34) exit -> EXIT PTCOMA .

    error           reduce using rule 34 (exit -> EXIT PTCOMA .)
    IMPRIMIR        reduce using rule 34 (exit -> EXIT PTCOMA .)
    UNSET           reduce using rule 34 (exit -> EXIT PTCOMA .)
    EXIT            reduce using rule 34 (exit -> EXIT PTCOMA .)
    GOTO            reduce using rule 34 (exit -> EXIT PTCOMA .)
    IF              reduce using rule 34 (exit -> EXIT PTCOMA .)
    TEMP            reduce using rule 34 (exit -> EXIT PTCOMA .)
    PARAM           reduce using rule 34 (exit -> EXIT PTCOMA .)
    RET             reduce using rule 34 (exit -> EXIT PTCOMA .)
    PILA            reduce using rule 34 (exit -> EXIT PTCOMA .)
    RA              reduce using rule 34 (exit -> EXIT PTCOMA .)
    PUNTERO         reduce using rule 34 (exit -> EXIT PTCOMA .)
    ID              reduce using rule 34 (exit -> EXIT PTCOMA .)
    $end            reduce using rule 34 (exit -> EXIT PTCOMA .)


state 42

    (32) go_to -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 83


state 43

    (33) if_instruccion -> IF PARIZQ . expresion PARDER GOTO ID PTCOMA
    (25) expresion -> . primitiva
    (26) expresion -> . expresion_numerica
    (27) expresion -> . expresion_relacional
    (28) expresion -> . expresion_unaria
    (29) expresion -> . expresion_logica
    (30) expresion -> . expresion_bit_bit
    (31) expresion -> . absoluto
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (70) expresion_numerica -> . primitiva MAS primitiva
    (71) expresion_numerica -> . primitiva MENOS primitiva
    (72) expresion_numerica -> . primitiva POR primitiva
    (73) expresion_numerica -> . primitiva DIVIDIDO primitiva
    (74) expresion_numerica -> . primitiva RESTO primitiva
    (64) expresion_relacional -> . primitiva MENQUE primitiva
    (65) expresion_relacional -> . primitiva MAYQUE primitiva
    (66) expresion_relacional -> . primitiva MEIQUE primitiva
    (67) expresion_relacional -> . primitiva MAIQUE primitiva
    (68) expresion_relacional -> . primitiva IGUALQUE primitiva
    (69) expresion_relacional -> . primitiva NIGUALQUE primitiva
    (53) expresion_unaria -> . MENOS primitiva
    (54) expresion_logica -> . primitiva AND primitiva
    (55) expresion_logica -> . primitiva OR primitiva
    (56) expresion_logica -> . primitiva XOR primitiva
    (57) expresion_logica -> . NOT primitiva
    (58) expresion_bit_bit -> . primitiva PAND primitiva
    (59) expresion_bit_bit -> . primitiva BOR primitiva
    (60) expresion_bit_bit -> . primitiva XORR primitiva
    (61) expresion_bit_bit -> . primitiva SHIFTI primitiva
    (62) expresion_bit_bit -> . primitiva SHIFTD primitiva
    (63) expresion_bit_bit -> . NOTR primitiva
    (75) absoluto -> . ABS PARIZQ primitiva PARDER
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70
    MENOS           shift and go to state 72
    NOT             shift and go to state 73
    NOTR            shift and go to state 74
    ABS             shift and go to state 75

    expresion                      shift and go to state 84
    primitiva                      shift and go to state 53
    expresion_numerica             shift and go to state 55
    expresion_relacional           shift and go to state 56
    expresion_unaria               shift and go to state 57
    expresion_logica               shift and go to state 58
    expresion_bit_bit              shift and go to state 59
    absoluto                       shift and go to state 60
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 44

    (21) imprimir_instr -> IMPRIMIR PARIZQ tipo_var . PARDER PTCOMA
    (87) acceso_lista -> tipo_var . accesos
    (90) accesos -> . accesos acceso
    (91) accesos -> . acceso
    (92) acceso -> . CORIZQ primitiva CORDER

    PARDER          shift and go to state 85
    CORIZQ          shift and go to state 39

    accesos                        shift and go to state 86
    acceso                         shift and go to state 38

state 45

    (22) imprimir_instr -> IMPRIMIR PARIZQ acceso_lista . PARDER PTCOMA

    PARDER          shift and go to state 87


state 46

    (23) imprimir_instr -> IMPRIMIR PARIZQ CADENA . PARDER PTCOMA

    PARDER          shift and go to state 88


state 47

    (24) imprimir_instr -> IMPRIMIR PARIZQ CADENA2 . PARDER PTCOMA

    PARDER          shift and go to state 89


state 48

    (87) acceso_lista -> tipo_var . accesos
    (90) accesos -> . accesos acceso
    (91) accesos -> . acceso
    (92) acceso -> . CORIZQ primitiva CORDER

    CORIZQ          shift and go to state 39

    accesos                        shift and go to state 86
    acceso                         shift and go to state 38

state 49

    (40) asignacion -> tipo_var IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 90


state 50

    (41) asignacion -> tipo_var IGUAL ARRAY . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 91


state 51

    (43) conversion -> tipo_var IGUAL PARIZQ . tipo_dato PARDER primitiva PTCOMA
    (44) tipo_dato -> . INT
    (45) tipo_dato -> . FLOAT
    (46) tipo_dato -> . CHAR

    INT             shift and go to state 93
    FLOAT           shift and go to state 94
    CHAR            shift and go to state 95

    tipo_dato                      shift and go to state 92

state 52

    (42) puntero -> tipo_var IGUAL PAND . tipo_var PTCOMA
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    TEMP            shift and go to state 25
    PARAM           shift and go to state 26
    RET             shift and go to state 27
    PILA            shift and go to state 28
    RA              shift and go to state 32
    PUNTERO         shift and go to state 33

    tipo_var                       shift and go to state 96

state 53

    (25) expresion -> primitiva .
    (70) expresion_numerica -> primitiva . MAS primitiva
    (71) expresion_numerica -> primitiva . MENOS primitiva
    (72) expresion_numerica -> primitiva . POR primitiva
    (73) expresion_numerica -> primitiva . DIVIDIDO primitiva
    (74) expresion_numerica -> primitiva . RESTO primitiva
    (64) expresion_relacional -> primitiva . MENQUE primitiva
    (65) expresion_relacional -> primitiva . MAYQUE primitiva
    (66) expresion_relacional -> primitiva . MEIQUE primitiva
    (67) expresion_relacional -> primitiva . MAIQUE primitiva
    (68) expresion_relacional -> primitiva . IGUALQUE primitiva
    (69) expresion_relacional -> primitiva . NIGUALQUE primitiva
    (54) expresion_logica -> primitiva . AND primitiva
    (55) expresion_logica -> primitiva . OR primitiva
    (56) expresion_logica -> primitiva . XOR primitiva
    (58) expresion_bit_bit -> primitiva . PAND primitiva
    (59) expresion_bit_bit -> primitiva . BOR primitiva
    (60) expresion_bit_bit -> primitiva . XORR primitiva
    (61) expresion_bit_bit -> primitiva . SHIFTI primitiva
    (62) expresion_bit_bit -> primitiva . SHIFTD primitiva

    PTCOMA          reduce using rule 25 (expresion -> primitiva .)
    PARDER          reduce using rule 25 (expresion -> primitiva .)
    MAS             shift and go to state 97
    MENOS           shift and go to state 98
    POR             shift and go to state 99
    DIVIDIDO        shift and go to state 100
    RESTO           shift and go to state 101
    MENQUE          shift and go to state 102
    MAYQUE          shift and go to state 103
    MEIQUE          shift and go to state 104
    MAIQUE          shift and go to state 105
    IGUALQUE        shift and go to state 106
    NIGUALQUE       shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109
    XOR             shift and go to state 110
    PAND            shift and go to state 111
    BOR             shift and go to state 112
    XORR            shift and go to state 113
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115


state 54

    (39) read -> tipo_var IGUAL READ . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 116


state 55

    (26) expresion -> expresion_numerica .

    PTCOMA          reduce using rule 26 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 26 (expresion -> expresion_numerica .)


state 56

    (27) expresion -> expresion_relacional .

    PTCOMA          reduce using rule 27 (expresion -> expresion_relacional .)
    PARDER          reduce using rule 27 (expresion -> expresion_relacional .)


state 57

    (28) expresion -> expresion_unaria .

    PTCOMA          reduce using rule 28 (expresion -> expresion_unaria .)
    PARDER          reduce using rule 28 (expresion -> expresion_unaria .)


state 58

    (29) expresion -> expresion_logica .

    PTCOMA          reduce using rule 29 (expresion -> expresion_logica .)
    PARDER          reduce using rule 29 (expresion -> expresion_logica .)


state 59

    (30) expresion -> expresion_bit_bit .

    PTCOMA          reduce using rule 30 (expresion -> expresion_bit_bit .)
    PARDER          reduce using rule 30 (expresion -> expresion_bit_bit .)


state 60

    (31) expresion -> absoluto .

    PTCOMA          reduce using rule 31 (expresion -> absoluto .)
    PARDER          reduce using rule 31 (expresion -> absoluto .)


state 61

    (76) primitiva -> ENTERO .

    MAS             reduce using rule 76 (primitiva -> ENTERO .)
    MENOS           reduce using rule 76 (primitiva -> ENTERO .)
    POR             reduce using rule 76 (primitiva -> ENTERO .)
    DIVIDIDO        reduce using rule 76 (primitiva -> ENTERO .)
    RESTO           reduce using rule 76 (primitiva -> ENTERO .)
    MENQUE          reduce using rule 76 (primitiva -> ENTERO .)
    MAYQUE          reduce using rule 76 (primitiva -> ENTERO .)
    MEIQUE          reduce using rule 76 (primitiva -> ENTERO .)
    MAIQUE          reduce using rule 76 (primitiva -> ENTERO .)
    IGUALQUE        reduce using rule 76 (primitiva -> ENTERO .)
    NIGUALQUE       reduce using rule 76 (primitiva -> ENTERO .)
    AND             reduce using rule 76 (primitiva -> ENTERO .)
    OR              reduce using rule 76 (primitiva -> ENTERO .)
    XOR             reduce using rule 76 (primitiva -> ENTERO .)
    PAND            reduce using rule 76 (primitiva -> ENTERO .)
    BOR             reduce using rule 76 (primitiva -> ENTERO .)
    XORR            reduce using rule 76 (primitiva -> ENTERO .)
    SHIFTI          reduce using rule 76 (primitiva -> ENTERO .)
    SHIFTD          reduce using rule 76 (primitiva -> ENTERO .)
    PTCOMA          reduce using rule 76 (primitiva -> ENTERO .)
    CORDER          reduce using rule 76 (primitiva -> ENTERO .)
    PARDER          reduce using rule 76 (primitiva -> ENTERO .)


state 62

    (77) primitiva -> DECIMAL .

    MAS             reduce using rule 77 (primitiva -> DECIMAL .)
    MENOS           reduce using rule 77 (primitiva -> DECIMAL .)
    POR             reduce using rule 77 (primitiva -> DECIMAL .)
    DIVIDIDO        reduce using rule 77 (primitiva -> DECIMAL .)
    RESTO           reduce using rule 77 (primitiva -> DECIMAL .)
    MENQUE          reduce using rule 77 (primitiva -> DECIMAL .)
    MAYQUE          reduce using rule 77 (primitiva -> DECIMAL .)
    MEIQUE          reduce using rule 77 (primitiva -> DECIMAL .)
    MAIQUE          reduce using rule 77 (primitiva -> DECIMAL .)
    IGUALQUE        reduce using rule 77 (primitiva -> DECIMAL .)
    NIGUALQUE       reduce using rule 77 (primitiva -> DECIMAL .)
    AND             reduce using rule 77 (primitiva -> DECIMAL .)
    OR              reduce using rule 77 (primitiva -> DECIMAL .)
    XOR             reduce using rule 77 (primitiva -> DECIMAL .)
    PAND            reduce using rule 77 (primitiva -> DECIMAL .)
    BOR             reduce using rule 77 (primitiva -> DECIMAL .)
    XORR            reduce using rule 77 (primitiva -> DECIMAL .)
    SHIFTI          reduce using rule 77 (primitiva -> DECIMAL .)
    SHIFTD          reduce using rule 77 (primitiva -> DECIMAL .)
    PTCOMA          reduce using rule 77 (primitiva -> DECIMAL .)
    CORDER          reduce using rule 77 (primitiva -> DECIMAL .)
    PARDER          reduce using rule 77 (primitiva -> DECIMAL .)


state 63

    (78) primitiva -> CADENA .

    MAS             reduce using rule 78 (primitiva -> CADENA .)
    MENOS           reduce using rule 78 (primitiva -> CADENA .)
    POR             reduce using rule 78 (primitiva -> CADENA .)
    DIVIDIDO        reduce using rule 78 (primitiva -> CADENA .)
    RESTO           reduce using rule 78 (primitiva -> CADENA .)
    MENQUE          reduce using rule 78 (primitiva -> CADENA .)
    MAYQUE          reduce using rule 78 (primitiva -> CADENA .)
    MEIQUE          reduce using rule 78 (primitiva -> CADENA .)
    MAIQUE          reduce using rule 78 (primitiva -> CADENA .)
    IGUALQUE        reduce using rule 78 (primitiva -> CADENA .)
    NIGUALQUE       reduce using rule 78 (primitiva -> CADENA .)
    AND             reduce using rule 78 (primitiva -> CADENA .)
    OR              reduce using rule 78 (primitiva -> CADENA .)
    XOR             reduce using rule 78 (primitiva -> CADENA .)
    PAND            reduce using rule 78 (primitiva -> CADENA .)
    BOR             reduce using rule 78 (primitiva -> CADENA .)
    XORR            reduce using rule 78 (primitiva -> CADENA .)
    SHIFTI          reduce using rule 78 (primitiva -> CADENA .)
    SHIFTD          reduce using rule 78 (primitiva -> CADENA .)
    PTCOMA          reduce using rule 78 (primitiva -> CADENA .)
    CORDER          reduce using rule 78 (primitiva -> CADENA .)
    PARDER          reduce using rule 78 (primitiva -> CADENA .)


state 64

    (79) primitiva -> CADENA2 .

    MAS             reduce using rule 79 (primitiva -> CADENA2 .)
    MENOS           reduce using rule 79 (primitiva -> CADENA2 .)
    POR             reduce using rule 79 (primitiva -> CADENA2 .)
    DIVIDIDO        reduce using rule 79 (primitiva -> CADENA2 .)
    RESTO           reduce using rule 79 (primitiva -> CADENA2 .)
    MENQUE          reduce using rule 79 (primitiva -> CADENA2 .)
    MAYQUE          reduce using rule 79 (primitiva -> CADENA2 .)
    MEIQUE          reduce using rule 79 (primitiva -> CADENA2 .)
    MAIQUE          reduce using rule 79 (primitiva -> CADENA2 .)
    IGUALQUE        reduce using rule 79 (primitiva -> CADENA2 .)
    NIGUALQUE       reduce using rule 79 (primitiva -> CADENA2 .)
    AND             reduce using rule 79 (primitiva -> CADENA2 .)
    OR              reduce using rule 79 (primitiva -> CADENA2 .)
    XOR             reduce using rule 79 (primitiva -> CADENA2 .)
    PAND            reduce using rule 79 (primitiva -> CADENA2 .)
    BOR             reduce using rule 79 (primitiva -> CADENA2 .)
    XORR            reduce using rule 79 (primitiva -> CADENA2 .)
    SHIFTI          reduce using rule 79 (primitiva -> CADENA2 .)
    SHIFTD          reduce using rule 79 (primitiva -> CADENA2 .)
    PTCOMA          reduce using rule 79 (primitiva -> CADENA2 .)
    CORDER          reduce using rule 79 (primitiva -> CADENA2 .)
    PARDER          reduce using rule 79 (primitiva -> CADENA2 .)


state 65

    (80) primitiva -> TEMP .
    (47) tipo_var -> TEMP .

    MAS             reduce using rule 80 (primitiva -> TEMP .)
    MENOS           reduce using rule 80 (primitiva -> TEMP .)
    POR             reduce using rule 80 (primitiva -> TEMP .)
    DIVIDIDO        reduce using rule 80 (primitiva -> TEMP .)
    RESTO           reduce using rule 80 (primitiva -> TEMP .)
    MENQUE          reduce using rule 80 (primitiva -> TEMP .)
    MAYQUE          reduce using rule 80 (primitiva -> TEMP .)
    MEIQUE          reduce using rule 80 (primitiva -> TEMP .)
    MAIQUE          reduce using rule 80 (primitiva -> TEMP .)
    IGUALQUE        reduce using rule 80 (primitiva -> TEMP .)
    NIGUALQUE       reduce using rule 80 (primitiva -> TEMP .)
    AND             reduce using rule 80 (primitiva -> TEMP .)
    OR              reduce using rule 80 (primitiva -> TEMP .)
    XOR             reduce using rule 80 (primitiva -> TEMP .)
    PAND            reduce using rule 80 (primitiva -> TEMP .)
    BOR             reduce using rule 80 (primitiva -> TEMP .)
    XORR            reduce using rule 80 (primitiva -> TEMP .)
    SHIFTI          reduce using rule 80 (primitiva -> TEMP .)
    SHIFTD          reduce using rule 80 (primitiva -> TEMP .)
    PTCOMA          reduce using rule 80 (primitiva -> TEMP .)
    CORDER          reduce using rule 80 (primitiva -> TEMP .)
    PARDER          reduce using rule 80 (primitiva -> TEMP .)
    CORIZQ          reduce using rule 47 (tipo_var -> TEMP .)


state 66

    (81) primitiva -> PARAM .
    (48) tipo_var -> PARAM .

    MAS             reduce using rule 81 (primitiva -> PARAM .)
    MENOS           reduce using rule 81 (primitiva -> PARAM .)
    POR             reduce using rule 81 (primitiva -> PARAM .)
    DIVIDIDO        reduce using rule 81 (primitiva -> PARAM .)
    RESTO           reduce using rule 81 (primitiva -> PARAM .)
    MENQUE          reduce using rule 81 (primitiva -> PARAM .)
    MAYQUE          reduce using rule 81 (primitiva -> PARAM .)
    MEIQUE          reduce using rule 81 (primitiva -> PARAM .)
    MAIQUE          reduce using rule 81 (primitiva -> PARAM .)
    IGUALQUE        reduce using rule 81 (primitiva -> PARAM .)
    NIGUALQUE       reduce using rule 81 (primitiva -> PARAM .)
    AND             reduce using rule 81 (primitiva -> PARAM .)
    OR              reduce using rule 81 (primitiva -> PARAM .)
    XOR             reduce using rule 81 (primitiva -> PARAM .)
    PAND            reduce using rule 81 (primitiva -> PARAM .)
    BOR             reduce using rule 81 (primitiva -> PARAM .)
    XORR            reduce using rule 81 (primitiva -> PARAM .)
    SHIFTI          reduce using rule 81 (primitiva -> PARAM .)
    SHIFTD          reduce using rule 81 (primitiva -> PARAM .)
    PTCOMA          reduce using rule 81 (primitiva -> PARAM .)
    CORDER          reduce using rule 81 (primitiva -> PARAM .)
    PARDER          reduce using rule 81 (primitiva -> PARAM .)
    CORIZQ          reduce using rule 48 (tipo_var -> PARAM .)


state 67

    (82) primitiva -> RET .
    (49) tipo_var -> RET .

    MAS             reduce using rule 82 (primitiva -> RET .)
    MENOS           reduce using rule 82 (primitiva -> RET .)
    POR             reduce using rule 82 (primitiva -> RET .)
    DIVIDIDO        reduce using rule 82 (primitiva -> RET .)
    RESTO           reduce using rule 82 (primitiva -> RET .)
    MENQUE          reduce using rule 82 (primitiva -> RET .)
    MAYQUE          reduce using rule 82 (primitiva -> RET .)
    MEIQUE          reduce using rule 82 (primitiva -> RET .)
    MAIQUE          reduce using rule 82 (primitiva -> RET .)
    IGUALQUE        reduce using rule 82 (primitiva -> RET .)
    NIGUALQUE       reduce using rule 82 (primitiva -> RET .)
    AND             reduce using rule 82 (primitiva -> RET .)
    OR              reduce using rule 82 (primitiva -> RET .)
    XOR             reduce using rule 82 (primitiva -> RET .)
    PAND            reduce using rule 82 (primitiva -> RET .)
    BOR             reduce using rule 82 (primitiva -> RET .)
    XORR            reduce using rule 82 (primitiva -> RET .)
    SHIFTI          reduce using rule 82 (primitiva -> RET .)
    SHIFTD          reduce using rule 82 (primitiva -> RET .)
    PTCOMA          reduce using rule 82 (primitiva -> RET .)
    CORDER          reduce using rule 82 (primitiva -> RET .)
    PARDER          reduce using rule 82 (primitiva -> RET .)
    CORIZQ          reduce using rule 49 (tipo_var -> RET .)


state 68

    (83) primitiva -> PILA .
    (50) tipo_var -> PILA .

    MAS             reduce using rule 83 (primitiva -> PILA .)
    MENOS           reduce using rule 83 (primitiva -> PILA .)
    POR             reduce using rule 83 (primitiva -> PILA .)
    DIVIDIDO        reduce using rule 83 (primitiva -> PILA .)
    RESTO           reduce using rule 83 (primitiva -> PILA .)
    MENQUE          reduce using rule 83 (primitiva -> PILA .)
    MAYQUE          reduce using rule 83 (primitiva -> PILA .)
    MEIQUE          reduce using rule 83 (primitiva -> PILA .)
    MAIQUE          reduce using rule 83 (primitiva -> PILA .)
    IGUALQUE        reduce using rule 83 (primitiva -> PILA .)
    NIGUALQUE       reduce using rule 83 (primitiva -> PILA .)
    AND             reduce using rule 83 (primitiva -> PILA .)
    OR              reduce using rule 83 (primitiva -> PILA .)
    XOR             reduce using rule 83 (primitiva -> PILA .)
    PAND            reduce using rule 83 (primitiva -> PILA .)
    BOR             reduce using rule 83 (primitiva -> PILA .)
    XORR            reduce using rule 83 (primitiva -> PILA .)
    SHIFTI          reduce using rule 83 (primitiva -> PILA .)
    SHIFTD          reduce using rule 83 (primitiva -> PILA .)
    PTCOMA          reduce using rule 83 (primitiva -> PILA .)
    CORDER          reduce using rule 83 (primitiva -> PILA .)
    PARDER          reduce using rule 83 (primitiva -> PILA .)
    CORIZQ          reduce using rule 50 (tipo_var -> PILA .)


state 69

    (84) primitiva -> RA .
    (51) tipo_var -> RA .

    MAS             reduce using rule 84 (primitiva -> RA .)
    MENOS           reduce using rule 84 (primitiva -> RA .)
    POR             reduce using rule 84 (primitiva -> RA .)
    DIVIDIDO        reduce using rule 84 (primitiva -> RA .)
    RESTO           reduce using rule 84 (primitiva -> RA .)
    MENQUE          reduce using rule 84 (primitiva -> RA .)
    MAYQUE          reduce using rule 84 (primitiva -> RA .)
    MEIQUE          reduce using rule 84 (primitiva -> RA .)
    MAIQUE          reduce using rule 84 (primitiva -> RA .)
    IGUALQUE        reduce using rule 84 (primitiva -> RA .)
    NIGUALQUE       reduce using rule 84 (primitiva -> RA .)
    AND             reduce using rule 84 (primitiva -> RA .)
    OR              reduce using rule 84 (primitiva -> RA .)
    XOR             reduce using rule 84 (primitiva -> RA .)
    PAND            reduce using rule 84 (primitiva -> RA .)
    BOR             reduce using rule 84 (primitiva -> RA .)
    XORR            reduce using rule 84 (primitiva -> RA .)
    SHIFTI          reduce using rule 84 (primitiva -> RA .)
    SHIFTD          reduce using rule 84 (primitiva -> RA .)
    PTCOMA          reduce using rule 84 (primitiva -> RA .)
    CORDER          reduce using rule 84 (primitiva -> RA .)
    PARDER          reduce using rule 84 (primitiva -> RA .)
    CORIZQ          reduce using rule 51 (tipo_var -> RA .)


state 70

    (85) primitiva -> PUNTERO .
    (52) tipo_var -> PUNTERO .

    MAS             reduce using rule 85 (primitiva -> PUNTERO .)
    MENOS           reduce using rule 85 (primitiva -> PUNTERO .)
    POR             reduce using rule 85 (primitiva -> PUNTERO .)
    DIVIDIDO        reduce using rule 85 (primitiva -> PUNTERO .)
    RESTO           reduce using rule 85 (primitiva -> PUNTERO .)
    MENQUE          reduce using rule 85 (primitiva -> PUNTERO .)
    MAYQUE          reduce using rule 85 (primitiva -> PUNTERO .)
    MEIQUE          reduce using rule 85 (primitiva -> PUNTERO .)
    MAIQUE          reduce using rule 85 (primitiva -> PUNTERO .)
    IGUALQUE        reduce using rule 85 (primitiva -> PUNTERO .)
    NIGUALQUE       reduce using rule 85 (primitiva -> PUNTERO .)
    AND             reduce using rule 85 (primitiva -> PUNTERO .)
    OR              reduce using rule 85 (primitiva -> PUNTERO .)
    XOR             reduce using rule 85 (primitiva -> PUNTERO .)
    PAND            reduce using rule 85 (primitiva -> PUNTERO .)
    BOR             reduce using rule 85 (primitiva -> PUNTERO .)
    XORR            reduce using rule 85 (primitiva -> PUNTERO .)
    SHIFTI          reduce using rule 85 (primitiva -> PUNTERO .)
    SHIFTD          reduce using rule 85 (primitiva -> PUNTERO .)
    PTCOMA          reduce using rule 85 (primitiva -> PUNTERO .)
    CORDER          reduce using rule 85 (primitiva -> PUNTERO .)
    PARDER          reduce using rule 85 (primitiva -> PUNTERO .)
    CORIZQ          reduce using rule 52 (tipo_var -> PUNTERO .)


state 71

    (86) primitiva -> acceso_lista .

    MAS             reduce using rule 86 (primitiva -> acceso_lista .)
    MENOS           reduce using rule 86 (primitiva -> acceso_lista .)
    POR             reduce using rule 86 (primitiva -> acceso_lista .)
    DIVIDIDO        reduce using rule 86 (primitiva -> acceso_lista .)
    RESTO           reduce using rule 86 (primitiva -> acceso_lista .)
    MENQUE          reduce using rule 86 (primitiva -> acceso_lista .)
    MAYQUE          reduce using rule 86 (primitiva -> acceso_lista .)
    MEIQUE          reduce using rule 86 (primitiva -> acceso_lista .)
    MAIQUE          reduce using rule 86 (primitiva -> acceso_lista .)
    IGUALQUE        reduce using rule 86 (primitiva -> acceso_lista .)
    NIGUALQUE       reduce using rule 86 (primitiva -> acceso_lista .)
    AND             reduce using rule 86 (primitiva -> acceso_lista .)
    OR              reduce using rule 86 (primitiva -> acceso_lista .)
    XOR             reduce using rule 86 (primitiva -> acceso_lista .)
    PAND            reduce using rule 86 (primitiva -> acceso_lista .)
    BOR             reduce using rule 86 (primitiva -> acceso_lista .)
    XORR            reduce using rule 86 (primitiva -> acceso_lista .)
    SHIFTI          reduce using rule 86 (primitiva -> acceso_lista .)
    SHIFTD          reduce using rule 86 (primitiva -> acceso_lista .)
    PTCOMA          reduce using rule 86 (primitiva -> acceso_lista .)
    CORDER          reduce using rule 86 (primitiva -> acceso_lista .)
    PARDER          reduce using rule 86 (primitiva -> acceso_lista .)


state 72

    (53) expresion_unaria -> MENOS . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 117
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 73

    (57) expresion_logica -> NOT . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 118
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 74

    (63) expresion_bit_bit -> NOTR . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 119
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 75

    (75) absoluto -> ABS . PARIZQ primitiva PARDER

    PARIZQ          shift and go to state 120


state 76

    (88) acceso_lista_asigna -> tipo_var accesos IGUAL . expresion PTCOMA
    (89) acceso_lista_asigna -> tipo_var accesos IGUAL . ARRAY PARIZQ PARDER PTCOMA
    (25) expresion -> . primitiva
    (26) expresion -> . expresion_numerica
    (27) expresion -> . expresion_relacional
    (28) expresion -> . expresion_unaria
    (29) expresion -> . expresion_logica
    (30) expresion -> . expresion_bit_bit
    (31) expresion -> . absoluto
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (70) expresion_numerica -> . primitiva MAS primitiva
    (71) expresion_numerica -> . primitiva MENOS primitiva
    (72) expresion_numerica -> . primitiva POR primitiva
    (73) expresion_numerica -> . primitiva DIVIDIDO primitiva
    (74) expresion_numerica -> . primitiva RESTO primitiva
    (64) expresion_relacional -> . primitiva MENQUE primitiva
    (65) expresion_relacional -> . primitiva MAYQUE primitiva
    (66) expresion_relacional -> . primitiva MEIQUE primitiva
    (67) expresion_relacional -> . primitiva MAIQUE primitiva
    (68) expresion_relacional -> . primitiva IGUALQUE primitiva
    (69) expresion_relacional -> . primitiva NIGUALQUE primitiva
    (53) expresion_unaria -> . MENOS primitiva
    (54) expresion_logica -> . primitiva AND primitiva
    (55) expresion_logica -> . primitiva OR primitiva
    (56) expresion_logica -> . primitiva XOR primitiva
    (57) expresion_logica -> . NOT primitiva
    (58) expresion_bit_bit -> . primitiva PAND primitiva
    (59) expresion_bit_bit -> . primitiva BOR primitiva
    (60) expresion_bit_bit -> . primitiva XORR primitiva
    (61) expresion_bit_bit -> . primitiva SHIFTI primitiva
    (62) expresion_bit_bit -> . primitiva SHIFTD primitiva
    (63) expresion_bit_bit -> . NOTR primitiva
    (75) absoluto -> . ABS PARIZQ primitiva PARDER
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ARRAY           shift and go to state 122
    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70
    MENOS           shift and go to state 72
    NOT             shift and go to state 73
    NOTR            shift and go to state 74
    ABS             shift and go to state 75

    tipo_var                       shift and go to state 48
    expresion                      shift and go to state 121
    primitiva                      shift and go to state 53
    expresion_numerica             shift and go to state 55
    expresion_relacional           shift and go to state 56
    expresion_unaria               shift and go to state 57
    expresion_logica               shift and go to state 58
    expresion_bit_bit              shift and go to state 59
    absoluto                       shift and go to state 60
    acceso_lista                   shift and go to state 71

state 77

    (90) accesos -> accesos acceso .

    IGUAL           reduce using rule 90 (accesos -> accesos acceso .)
    CORIZQ          reduce using rule 90 (accesos -> accesos acceso .)
    PARDER          reduce using rule 90 (accesos -> accesos acceso .)
    MAS             reduce using rule 90 (accesos -> accesos acceso .)
    MENOS           reduce using rule 90 (accesos -> accesos acceso .)
    POR             reduce using rule 90 (accesos -> accesos acceso .)
    DIVIDIDO        reduce using rule 90 (accesos -> accesos acceso .)
    RESTO           reduce using rule 90 (accesos -> accesos acceso .)
    MENQUE          reduce using rule 90 (accesos -> accesos acceso .)
    MAYQUE          reduce using rule 90 (accesos -> accesos acceso .)
    MEIQUE          reduce using rule 90 (accesos -> accesos acceso .)
    MAIQUE          reduce using rule 90 (accesos -> accesos acceso .)
    IGUALQUE        reduce using rule 90 (accesos -> accesos acceso .)
    NIGUALQUE       reduce using rule 90 (accesos -> accesos acceso .)
    AND             reduce using rule 90 (accesos -> accesos acceso .)
    OR              reduce using rule 90 (accesos -> accesos acceso .)
    XOR             reduce using rule 90 (accesos -> accesos acceso .)
    PAND            reduce using rule 90 (accesos -> accesos acceso .)
    BOR             reduce using rule 90 (accesos -> accesos acceso .)
    XORR            reduce using rule 90 (accesos -> accesos acceso .)
    SHIFTI          reduce using rule 90 (accesos -> accesos acceso .)
    SHIFTD          reduce using rule 90 (accesos -> accesos acceso .)
    PTCOMA          reduce using rule 90 (accesos -> accesos acceso .)
    CORDER          reduce using rule 90 (accesos -> accesos acceso .)


state 78

    (92) acceso -> CORIZQ primitiva . CORDER

    CORDER          shift and go to state 123


state 79

    (35) unset -> UNSET PARIZQ TEMP . PARDER PTCOMA

    PARDER          shift and go to state 124


state 80

    (36) unset -> UNSET PARIZQ PARAM . PARDER PTCOMA

    PARDER          shift and go to state 125


state 81

    (37) unset -> UNSET PARIZQ RET . PARDER PTCOMA

    PARDER          shift and go to state 126


state 82

    (38) unset -> UNSET PARIZQ PILA . PARDER PTCOMA

    PARDER          shift and go to state 127


state 83

    (32) go_to -> GOTO ID PTCOMA .

    error           reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    IMPRIMIR        reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    UNSET           reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    EXIT            reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    IF              reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    TEMP            reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    PARAM           reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    RET             reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    PILA            reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    RA              reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    PUNTERO         reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    ID              reduce using rule 32 (go_to -> GOTO ID PTCOMA .)
    $end            reduce using rule 32 (go_to -> GOTO ID PTCOMA .)


state 84

    (33) if_instruccion -> IF PARIZQ expresion . PARDER GOTO ID PTCOMA

    PARDER          shift and go to state 128


state 85

    (21) imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER . PTCOMA

    PTCOMA          shift and go to state 129


state 86

    (87) acceso_lista -> tipo_var accesos .
    (90) accesos -> accesos . acceso
    (92) acceso -> . CORIZQ primitiva CORDER

    PARDER          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    MAS             reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    MENOS           reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    POR             reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    DIVIDIDO        reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    RESTO           reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    MENQUE          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    MAYQUE          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    MEIQUE          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    MAIQUE          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    IGUALQUE        reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    NIGUALQUE       reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    AND             reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    OR              reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    XOR             reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    PAND            reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    BOR             reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    XORR            reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    SHIFTI          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    SHIFTD          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    PTCOMA          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    CORDER          reduce using rule 87 (acceso_lista -> tipo_var accesos .)
    CORIZQ          shift and go to state 39

    acceso                         shift and go to state 77

state 87

    (22) imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER . PTCOMA

    PTCOMA          shift and go to state 130


state 88

    (23) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER . PTCOMA

    PTCOMA          shift and go to state 131


state 89

    (24) imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER . PTCOMA

    PTCOMA          shift and go to state 132


state 90

    (40) asignacion -> tipo_var IGUAL expresion PTCOMA .

    error           reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    IMPRIMIR        reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    UNSET           reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    EXIT            reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    GOTO            reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    IF              reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    TEMP            reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    PARAM           reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    RET             reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    PILA            reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    RA              reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    PUNTERO         reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    ID              reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)
    $end            reduce using rule 40 (asignacion -> tipo_var IGUAL expresion PTCOMA .)


state 91

    (41) asignacion -> tipo_var IGUAL ARRAY PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 133


state 92

    (43) conversion -> tipo_var IGUAL PARIZQ tipo_dato . PARDER primitiva PTCOMA

    PARDER          shift and go to state 134


state 93

    (44) tipo_dato -> INT .

    PARDER          reduce using rule 44 (tipo_dato -> INT .)


state 94

    (45) tipo_dato -> FLOAT .

    PARDER          reduce using rule 45 (tipo_dato -> FLOAT .)


state 95

    (46) tipo_dato -> CHAR .

    PARDER          reduce using rule 46 (tipo_dato -> CHAR .)


state 96

    (42) puntero -> tipo_var IGUAL PAND tipo_var . PTCOMA

    PTCOMA          shift and go to state 135


state 97

    (70) expresion_numerica -> primitiva MAS . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 136
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 98

    (71) expresion_numerica -> primitiva MENOS . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 137
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 99

    (72) expresion_numerica -> primitiva POR . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 138
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 100

    (73) expresion_numerica -> primitiva DIVIDIDO . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 139
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 101

    (74) expresion_numerica -> primitiva RESTO . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 140
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 102

    (64) expresion_relacional -> primitiva MENQUE . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 141
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 103

    (65) expresion_relacional -> primitiva MAYQUE . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 142
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 104

    (66) expresion_relacional -> primitiva MEIQUE . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 143
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 105

    (67) expresion_relacional -> primitiva MAIQUE . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 144
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 106

    (68) expresion_relacional -> primitiva IGUALQUE . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 145
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 107

    (69) expresion_relacional -> primitiva NIGUALQUE . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 146
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 108

    (54) expresion_logica -> primitiva AND . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 147
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 109

    (55) expresion_logica -> primitiva OR . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 148
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 110

    (56) expresion_logica -> primitiva XOR . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 149
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 111

    (58) expresion_bit_bit -> primitiva PAND . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 150
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 112

    (59) expresion_bit_bit -> primitiva BOR . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 151
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 113

    (60) expresion_bit_bit -> primitiva XORR . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 152
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 114

    (61) expresion_bit_bit -> primitiva SHIFTI . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 153
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 115

    (62) expresion_bit_bit -> primitiva SHIFTD . primitiva
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 154
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 116

    (39) read -> tipo_var IGUAL READ PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 155


state 117

    (53) expresion_unaria -> MENOS primitiva .

    PTCOMA          reduce using rule 53 (expresion_unaria -> MENOS primitiva .)
    PARDER          reduce using rule 53 (expresion_unaria -> MENOS primitiva .)


state 118

    (57) expresion_logica -> NOT primitiva .

    PTCOMA          reduce using rule 57 (expresion_logica -> NOT primitiva .)
    PARDER          reduce using rule 57 (expresion_logica -> NOT primitiva .)


state 119

    (63) expresion_bit_bit -> NOTR primitiva .

    PTCOMA          reduce using rule 63 (expresion_bit_bit -> NOTR primitiva .)
    PARDER          reduce using rule 63 (expresion_bit_bit -> NOTR primitiva .)


state 120

    (75) absoluto -> ABS PARIZQ . primitiva PARDER
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    primitiva                      shift and go to state 156
    acceso_lista                   shift and go to state 71
    tipo_var                       shift and go to state 48

state 121

    (88) acceso_lista_asigna -> tipo_var accesos IGUAL expresion . PTCOMA

    PTCOMA          shift and go to state 157


state 122

    (89) acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 158


state 123

    (92) acceso -> CORIZQ primitiva CORDER .

    IGUAL           reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    CORIZQ          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    PARDER          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    MAS             reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    MENOS           reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    POR             reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    DIVIDIDO        reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    RESTO           reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    MENQUE          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    MAYQUE          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    MEIQUE          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    MAIQUE          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    IGUALQUE        reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    NIGUALQUE       reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    AND             reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    OR              reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    XOR             reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    PAND            reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    BOR             reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    XORR            reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    SHIFTI          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    SHIFTD          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    PTCOMA          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)
    CORDER          reduce using rule 92 (acceso -> CORIZQ primitiva CORDER .)


state 124

    (35) unset -> UNSET PARIZQ TEMP PARDER . PTCOMA

    PTCOMA          shift and go to state 159


state 125

    (36) unset -> UNSET PARIZQ PARAM PARDER . PTCOMA

    PTCOMA          shift and go to state 160


state 126

    (37) unset -> UNSET PARIZQ RET PARDER . PTCOMA

    PTCOMA          shift and go to state 161


state 127

    (38) unset -> UNSET PARIZQ PILA PARDER . PTCOMA

    PTCOMA          shift and go to state 162


state 128

    (33) if_instruccion -> IF PARIZQ expresion PARDER . GOTO ID PTCOMA

    GOTO            shift and go to state 163


state 129

    (21) imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .

    error           reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    UNSET           reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    EXIT            reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    GOTO            reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    IF              reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    TEMP            reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    PARAM           reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    RET             reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    PILA            reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    RA              reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    PUNTERO         reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    ID              reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)
    $end            reduce using rule 21 (imprimir_instr -> IMPRIMIR PARIZQ tipo_var PARDER PTCOMA .)


state 130

    (22) imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .

    error           reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    UNSET           reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    EXIT            reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    GOTO            reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    IF              reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    TEMP            reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    PARAM           reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    RET             reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    PILA            reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    RA              reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    PUNTERO         reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    ID              reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)
    $end            reduce using rule 22 (imprimir_instr -> IMPRIMIR PARIZQ acceso_lista PARDER PTCOMA .)


state 131

    (23) imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .

    error           reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    UNSET           reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    EXIT            reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    GOTO            reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    IF              reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    TEMP            reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    PARAM           reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    RET             reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    PILA            reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    RA              reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    PUNTERO         reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    ID              reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)
    $end            reduce using rule 23 (imprimir_instr -> IMPRIMIR PARIZQ CADENA PARDER PTCOMA .)


state 132

    (24) imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .

    error           reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    UNSET           reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    EXIT            reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    GOTO            reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    IF              reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    TEMP            reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    PARAM           reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    RET             reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    PILA            reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    RA              reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    PUNTERO         reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    ID              reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)
    $end            reduce using rule 24 (imprimir_instr -> IMPRIMIR PARIZQ CADENA2 PARDER PTCOMA .)


state 133

    (41) asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 164


state 134

    (43) conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER . primitiva PTCOMA
    (76) primitiva -> . ENTERO
    (77) primitiva -> . DECIMAL
    (78) primitiva -> . CADENA
    (79) primitiva -> . CADENA2
    (80) primitiva -> . TEMP
    (81) primitiva -> . PARAM
    (82) primitiva -> . RET
    (83) primitiva -> . PILA
    (84) primitiva -> . RA
    (85) primitiva -> . PUNTERO
    (86) primitiva -> . acceso_lista
    (87) acceso_lista -> . tipo_var accesos
    (47) tipo_var -> . TEMP
    (48) tipo_var -> . PARAM
    (49) tipo_var -> . RET
    (50) tipo_var -> . PILA
    (51) tipo_var -> . RA
    (52) tipo_var -> . PUNTERO

    ENTERO          shift and go to state 61
    DECIMAL         shift and go to state 62
    CADENA          shift and go to state 63
    CADENA2         shift and go to state 64
    TEMP            shift and go to state 65
    PARAM           shift and go to state 66
    RET             shift and go to state 67
    PILA            shift and go to state 68
    RA              shift and go to state 69
    PUNTERO         shift and go to state 70

    tipo_var                       shift and go to state 48
    primitiva                      shift and go to state 165
    acceso_lista                   shift and go to state 71

state 135

    (42) puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .

    error           reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    IMPRIMIR        reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    UNSET           reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    EXIT            reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    GOTO            reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    IF              reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    TEMP            reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    PARAM           reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    RET             reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    PILA            reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    RA              reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    PUNTERO         reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    ID              reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)
    $end            reduce using rule 42 (puntero -> tipo_var IGUAL PAND tipo_var PTCOMA .)


state 136

    (70) expresion_numerica -> primitiva MAS primitiva .

    PTCOMA          reduce using rule 70 (expresion_numerica -> primitiva MAS primitiva .)
    PARDER          reduce using rule 70 (expresion_numerica -> primitiva MAS primitiva .)


state 137

    (71) expresion_numerica -> primitiva MENOS primitiva .

    PTCOMA          reduce using rule 71 (expresion_numerica -> primitiva MENOS primitiva .)
    PARDER          reduce using rule 71 (expresion_numerica -> primitiva MENOS primitiva .)


state 138

    (72) expresion_numerica -> primitiva POR primitiva .

    PTCOMA          reduce using rule 72 (expresion_numerica -> primitiva POR primitiva .)
    PARDER          reduce using rule 72 (expresion_numerica -> primitiva POR primitiva .)


state 139

    (73) expresion_numerica -> primitiva DIVIDIDO primitiva .

    PTCOMA          reduce using rule 73 (expresion_numerica -> primitiva DIVIDIDO primitiva .)
    PARDER          reduce using rule 73 (expresion_numerica -> primitiva DIVIDIDO primitiva .)


state 140

    (74) expresion_numerica -> primitiva RESTO primitiva .

    PTCOMA          reduce using rule 74 (expresion_numerica -> primitiva RESTO primitiva .)
    PARDER          reduce using rule 74 (expresion_numerica -> primitiva RESTO primitiva .)


state 141

    (64) expresion_relacional -> primitiva MENQUE primitiva .

    PTCOMA          reduce using rule 64 (expresion_relacional -> primitiva MENQUE primitiva .)
    PARDER          reduce using rule 64 (expresion_relacional -> primitiva MENQUE primitiva .)


state 142

    (65) expresion_relacional -> primitiva MAYQUE primitiva .

    PTCOMA          reduce using rule 65 (expresion_relacional -> primitiva MAYQUE primitiva .)
    PARDER          reduce using rule 65 (expresion_relacional -> primitiva MAYQUE primitiva .)


state 143

    (66) expresion_relacional -> primitiva MEIQUE primitiva .

    PTCOMA          reduce using rule 66 (expresion_relacional -> primitiva MEIQUE primitiva .)
    PARDER          reduce using rule 66 (expresion_relacional -> primitiva MEIQUE primitiva .)


state 144

    (67) expresion_relacional -> primitiva MAIQUE primitiva .

    PTCOMA          reduce using rule 67 (expresion_relacional -> primitiva MAIQUE primitiva .)
    PARDER          reduce using rule 67 (expresion_relacional -> primitiva MAIQUE primitiva .)


state 145

    (68) expresion_relacional -> primitiva IGUALQUE primitiva .

    PTCOMA          reduce using rule 68 (expresion_relacional -> primitiva IGUALQUE primitiva .)
    PARDER          reduce using rule 68 (expresion_relacional -> primitiva IGUALQUE primitiva .)


state 146

    (69) expresion_relacional -> primitiva NIGUALQUE primitiva .

    PTCOMA          reduce using rule 69 (expresion_relacional -> primitiva NIGUALQUE primitiva .)
    PARDER          reduce using rule 69 (expresion_relacional -> primitiva NIGUALQUE primitiva .)


state 147

    (54) expresion_logica -> primitiva AND primitiva .

    PTCOMA          reduce using rule 54 (expresion_logica -> primitiva AND primitiva .)
    PARDER          reduce using rule 54 (expresion_logica -> primitiva AND primitiva .)


state 148

    (55) expresion_logica -> primitiva OR primitiva .

    PTCOMA          reduce using rule 55 (expresion_logica -> primitiva OR primitiva .)
    PARDER          reduce using rule 55 (expresion_logica -> primitiva OR primitiva .)


state 149

    (56) expresion_logica -> primitiva XOR primitiva .

    PTCOMA          reduce using rule 56 (expresion_logica -> primitiva XOR primitiva .)
    PARDER          reduce using rule 56 (expresion_logica -> primitiva XOR primitiva .)


state 150

    (58) expresion_bit_bit -> primitiva PAND primitiva .

    PTCOMA          reduce using rule 58 (expresion_bit_bit -> primitiva PAND primitiva .)
    PARDER          reduce using rule 58 (expresion_bit_bit -> primitiva PAND primitiva .)


state 151

    (59) expresion_bit_bit -> primitiva BOR primitiva .

    PTCOMA          reduce using rule 59 (expresion_bit_bit -> primitiva BOR primitiva .)
    PARDER          reduce using rule 59 (expresion_bit_bit -> primitiva BOR primitiva .)


state 152

    (60) expresion_bit_bit -> primitiva XORR primitiva .

    PTCOMA          reduce using rule 60 (expresion_bit_bit -> primitiva XORR primitiva .)
    PARDER          reduce using rule 60 (expresion_bit_bit -> primitiva XORR primitiva .)


state 153

    (61) expresion_bit_bit -> primitiva SHIFTI primitiva .

    PTCOMA          reduce using rule 61 (expresion_bit_bit -> primitiva SHIFTI primitiva .)
    PARDER          reduce using rule 61 (expresion_bit_bit -> primitiva SHIFTI primitiva .)


state 154

    (62) expresion_bit_bit -> primitiva SHIFTD primitiva .

    PTCOMA          reduce using rule 62 (expresion_bit_bit -> primitiva SHIFTD primitiva .)
    PARDER          reduce using rule 62 (expresion_bit_bit -> primitiva SHIFTD primitiva .)


state 155

    (39) read -> tipo_var IGUAL READ PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 166


state 156

    (75) absoluto -> ABS PARIZQ primitiva . PARDER

    PARDER          shift and go to state 167


state 157

    (88) acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .

    error           reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    IMPRIMIR        reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    UNSET           reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    EXIT            reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    GOTO            reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    IF              reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    TEMP            reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    PARAM           reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    RET             reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    PILA            reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    RA              reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    PUNTERO         reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    ID              reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)
    $end            reduce using rule 88 (acceso_lista_asigna -> tipo_var accesos IGUAL expresion PTCOMA .)


state 158

    (89) acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 168


state 159

    (35) unset -> UNSET PARIZQ TEMP PARDER PTCOMA .

    error           reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    UNSET           reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    EXIT            reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    GOTO            reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    IF              reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    TEMP            reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    PARAM           reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    RET             reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    PILA            reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    RA              reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    PUNTERO         reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    ID              reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)
    $end            reduce using rule 35 (unset -> UNSET PARIZQ TEMP PARDER PTCOMA .)


state 160

    (36) unset -> UNSET PARIZQ PARAM PARDER PTCOMA .

    error           reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    UNSET           reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    EXIT            reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    GOTO            reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    IF              reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    TEMP            reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    PARAM           reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    RET             reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    PILA            reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    RA              reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    PUNTERO         reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    ID              reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)
    $end            reduce using rule 36 (unset -> UNSET PARIZQ PARAM PARDER PTCOMA .)


state 161

    (37) unset -> UNSET PARIZQ RET PARDER PTCOMA .

    error           reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    UNSET           reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    EXIT            reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    GOTO            reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    IF              reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    TEMP            reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    PARAM           reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    RET             reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    PILA            reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    RA              reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    PUNTERO         reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    ID              reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)
    $end            reduce using rule 37 (unset -> UNSET PARIZQ RET PARDER PTCOMA .)


state 162

    (38) unset -> UNSET PARIZQ PILA PARDER PTCOMA .

    error           reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    UNSET           reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    EXIT            reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    GOTO            reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    IF              reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    TEMP            reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    PARAM           reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    RET             reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    PILA            reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    RA              reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    PUNTERO         reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    ID              reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)
    $end            reduce using rule 38 (unset -> UNSET PARIZQ PILA PARDER PTCOMA .)


state 163

    (33) if_instruccion -> IF PARIZQ expresion PARDER GOTO . ID PTCOMA

    ID              shift and go to state 169


state 164

    (41) asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .

    error           reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    UNSET           reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    EXIT            reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    GOTO            reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    IF              reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    TEMP            reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    PARAM           reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    RET             reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    PILA            reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    RA              reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    PUNTERO         reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 41 (asignacion -> tipo_var IGUAL ARRAY PARIZQ PARDER PTCOMA .)


state 165

    (43) conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva . PTCOMA

    PTCOMA          shift and go to state 170


state 166

    (39) read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .

    error           reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    UNSET           reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    EXIT            reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    GOTO            reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    IF              reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    TEMP            reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    PARAM           reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    RET             reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    PILA            reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    RA              reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    PUNTERO         reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 39 (read -> tipo_var IGUAL READ PARIZQ PARDER PTCOMA .)


state 167

    (75) absoluto -> ABS PARIZQ primitiva PARDER .

    PTCOMA          reduce using rule 75 (absoluto -> ABS PARIZQ primitiva PARDER .)
    PARDER          reduce using rule 75 (absoluto -> ABS PARIZQ primitiva PARDER .)


state 168

    (89) acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 171


state 169

    (33) if_instruccion -> IF PARIZQ expresion PARDER GOTO ID . PTCOMA

    PTCOMA          shift and go to state 172


state 170

    (43) conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .

    error           reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    IMPRIMIR        reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    UNSET           reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    EXIT            reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    GOTO            reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    IF              reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    TEMP            reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    PARAM           reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    RET             reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    PILA            reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    RA              reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    PUNTERO         reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    ID              reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)
    $end            reduce using rule 43 (conversion -> tipo_var IGUAL PARIZQ tipo_dato PARDER primitiva PTCOMA .)


state 171

    (89) acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .

    error           reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    IMPRIMIR        reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    UNSET           reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    EXIT            reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    GOTO            reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    IF              reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    TEMP            reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    PARAM           reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    RET             reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    PILA            reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    RA              reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    PUNTERO         reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 89 (acceso_lista_asigna -> tipo_var accesos IGUAL ARRAY PARIZQ PARDER PTCOMA .)


state 172

    (33) if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .

    error           reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    IMPRIMIR        reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    UNSET           reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    EXIT            reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    GOTO            reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    IF              reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    TEMP            reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    PARAM           reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    RET             reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    PILA            reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    RA              reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    PUNTERO         reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    ID              reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)
    $end            reduce using rule 33 (if_instruccion -> IF PARIZQ expresion PARDER GOTO ID PTCOMA .)

